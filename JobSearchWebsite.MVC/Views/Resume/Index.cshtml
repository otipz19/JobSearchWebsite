@using Data.Entities;
@using Data.Enums;
@using Utility.Services.OrderServices;
@model ResumeIndexListVm
@{
    ViewData["Title"] = "Index";
}

<div class="container">
    <div class="row">
        <div class="col-sm-6">
            <h3 class="display-3">@Model.TotalCount @(Model.TotalCount == 1 ? "Resume" : "Resumes") Found</h3>
        </div>
        @if (User.IsJobseeker())
        {
            <div class="col-sm-6 d-flex justify-content-end align-items-center">
                <a asp-action="Create" class="btn btn-outline-primary">
                    Create new resume
                </a>
            </div>
        }
    </div>

    <hr />

    <div class="row gx-5 mt-4">

        @*Search/Filter/Sort form*@
        <div class="col-sm-4">
            <div class="row mb-3">
                <div class="col-sm-6">
                    <a asp-action="Index" class="form-control btn btn-outline-secondary">Reset</a>
                </div>
                <div class="col-sm-6">
                    <button type="submit" class="form-control btn btn-outline-primary">
                        Search
                    </button>
                </div>
            </div>

            <div class="row mb-3">
                <label class="form-label">Search by title</label>
                <div>
                    <input asp-for="Filter.SearchQuery" type="text" class="form-control" />
                </div>
            </div>

            <div class="row mb-3">
                <label class="form-label">Salary bounds</label>
                <div class="input-group">
                    <span class="input-group-text">From</span>
                    <input asp-for="Filter.SalaryFrom" type="number" class="form-control" />
                    <span class="input-group-text">To</span>
                    <input asp-for="Filter.SalaryTo" type="number" class="form-control" />
                </div>
            </div>

            @{
                var models = new List<IndexCheckboxPartialVm>()
            {
            new IndexCheckboxPartialVm(Model.Filter.CheckboxKeywords, "Keywords", $"{nameof(Model.Filter)}.{nameof(Model.Filter.KeywordsId)}"),
            new IndexCheckboxPartialVm(Model.Filter.CheckboxSpheres, "Spheres", $"{nameof(Model.Filter)}.{nameof(Model.Filter.SpheresId)}"),
            new IndexCheckboxPartialVm(Model.Filter.CheckboxSpecializations, "Specializations", $"{nameof(Model.Filter)}.{nameof(Model.Filter.SpecializationsId)}"),
            new IndexCheckboxPartialVm(Model.Filter.CheckboxExperienceLevels, "Experience level", $"{nameof(Model.Filter)}.{nameof(Model.Filter.ExperienceLevelsId)}"),
            new IndexCheckboxPartialVm(Model.Filter.CheckboxEnglishLevels, "English level", $"{nameof(Model.Filter)}.{nameof(Model.Filter.EnglishLevelsId)}"),
            new IndexCheckboxPartialVm(Model.Filter.CheckboxRemotenesses, "Remoteness", $"{nameof(Model.Filter)}.{nameof(Model.Filter.RemotenessesId)}"),
            new IndexCheckboxPartialVm(Model.Filter.CheckboxStates, "States", $"{nameof(Model.Filter)}.{nameof(Model.Filter.StatesId)}"),
            new IndexCheckboxPartialVm(Model.Filter.CheckboxCities, "Cities", $"{nameof(Model.Filter)}.{nameof(Model.Filter.CitiesId)}"),
            };
                for (int i = 0; i < models.Count; i++)
                {
                    models[i].AccordionId = $"flush-{i.ToString()}";
                }
            }
            <div class="accordion accordion-flush mb-3" id="accordion">
                @foreach (var model in models)
                {
                    <partial name="_IndexCheckboxListPartial" model="model" />
                }
            </div>

            <div class="row mb-3">
                <div class="col-sm-6">
                    <a asp-action="Index" class="form-control btn btn-outline-secondary">Reset</a>
                </div>
                <div class="col-sm-6">
                    <button type="submit" class="form-control btn btn-outline-primary">
                        Search
                    </button>
                </div>
            </div>

        </div>

        <div class="col-sm-8">
            <div class="row justify-content-between mb-3">
                <div class="col-sm-auto col-12">
                    @if (!Model.IsPreviousDisabled)
                    {
                        <input asp-route-Id="@(Model.CurrentPage - 1)" type="submit" value="Previous page" class="form-control btn btn-outline-primary" />
                    }
                    else
                    {
                        <input value="Previous page" type="submit" class="form-control btn btn-outline-primary" disabled />
                    }
                </div>

                <div class="col-auto">
                    <select asp-for="Order.OrderType" class="form-select">
                        <option selected value="@OrderType.ByPublishDate">By publish date</option>
                        <option value="@OrderType.ByWatches">By watches</option>
                        <option value="@OrderType.ByResponds">By responds</option>
                    </select>
                </div>

                <div class="col-auto">
                    <select asp-for="Order.IsAscending" class="form-select">
                        <option selected value="@false">Descending</option>
                        <option value="@true">Ascending</option>
                    </select>
                </div>

                <div class="col-sm-auto col-12">
                    @if (!Model.IsNextDisabled)
                    {
                        <input asp-route-Id="@(Model.CurrentPage + 1)" type="submit" value="Next page" class="form-control btn btn-outline-primary" />
                    }
                    else
                    {
                        <input value="Next page" type="submit" class="form-control btn btn-outline-primary" disabled />
                    }
                </div>
            </div>

            <div class="list-group">
                @foreach (ResumeIndexVm viewModel in Model.Items)
                {
                    <a asp-action="Details" asp-route-id="@viewModel.Id" class="list-group-item list-group-item-action">
                        <div class="d-flex w-100 justify-content-between">
                            <h5 class="mb-1">@viewModel.Name</h5>
                            <small>@viewModel.CreatedAgo</small>
                        </div>
                        <p class="mb-1">@viewModel.ShortDescription</p>
                        <small class="text-muted">And some small print.</small>
                    </a>
                }
            </div>

            @if (Model.Items.Any())
            {
                <div class="row justify-content-between mb-3">
                    <div class="col-sm-auto col-12">
                        @if (!Model.IsPreviousDisabled)
                        {
                            <input asp-route-Id="@(Model.CurrentPage - 1)" type="submit" value="Previous page" class="form-control btn btn-outline-primary" />
                        }
                        else
                        {
                            <input value="Previous page" type="submit" class="form-control btn btn-outline-primary" disabled />
                        }
                    </div>

                    <div class="col-sm-auto col-12">
                        @if (!Model.IsNextDisabled)
                        {
                            <input asp-route-Id="@(Model.CurrentPage + 1)" type="submit" value="Next page" class="form-control btn btn-outline-primary" />
                        }
                        else
                        {
                            <input value="Next page" type="submit" class="form-control btn btn-outline-primary" disabled />
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>


